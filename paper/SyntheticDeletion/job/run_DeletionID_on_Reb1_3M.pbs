#!/bin/bash
#PBS -l nodes=1:ppn=4
#PBS -l pmem=16gb
#PBS -l walltime=00:10:00
#PBS -A open
#PBS -o logs/depth.did.Reb1.3M.log.out
#PBS -e logs/depth.did.Reb1.3M.log.err
#PBS -t 1-1000

# This script will check that 1000 BAM files have been generated before executing DeletionID.

module load gcc/8.3.1
module load bedtools/2.27.1
module load bwa/0.7.15
module load samtools/1.5
module load anaconda3
source activate genopipe

# FIRST CHANGE PATH TO EXECUTE
WRK=/path/to/GenoPipe/paper/SyntheticDeletion
cd $WRK

INFO=`sed "10q;d" depth_simulations.txt`
LOCUS=`awk '{print $1}'  <(echo $INFO)`
DEPTH=`awk '{print $2}'  <(echo $INFO)`

REF=`echo $LOCUS | awk -F'_' '{print $1}'`

OUTPUT=$WRK/results/$LOCUS\_$DEPTH
BAM=$WRK/results/$LOCUS\_$DEPTH/BAM
TEMP=$WRK/temp10-$PBS_ARRAYID

[ -d $OUTPUT/ID ] || mkdir $OUTPUT/ID
[ -d logs ] || mkdir logs
[ -d $ID ] || mkdir $ID
[ -d $TEMP ] || mkdir $TEMP

#Check that BAM file was generated first
if [ -f $BAM.bam ];
then
	echo "BAM input for ${LOCUS}_${DEPTH}_${PBS_ARRAYID} does not exist. Exiting."
	exit
fi
#Check that BAM Index file exists
if [ -f $BAM.bam.bai ];
then
	echo "BAI missing for for ${LOCUS}_${DEPTH}_${PBS_ARRAYID}. Exiting."
	exit
fi
#Check if ID file alrady generated
#if [[ -f $ID/Simulation_$PBS_ARRAYID\_R1-ID.tab ]]; then
#	echo "ID already generated ($PBS_ARRAYID). Exiting.."
#	exit
#fi

# Set-up Temp directory
cd $TEMP
echo $BAM
ln -s $BAM/Simulation_$PBS_ARRAYID.bam
ln -s $BAM/Simulation_$PBS_ARRAYID.bam.bai

DATABASE=$WRK/../db/sacCer3_Del
GENOPIPE=$WRK/../..

## Execute Single DeletionID and record time
cd $GENOPIPE/DeletionID
echo "**Begin executing DeletionID for ${LOCUS}_${DEPTH}..."
time bash identify-Deletion.sh -i $TEMP -o $OUTPUT/ID -d $DATABASE
MESSAGE="...single DeletionID for ${LOCUS} ${DEPTH} finished."
echo $MESSAGE
cd $WRK

## Clean-up
rm -r $TEMP
