#!/bin/bash
#PBS -l nodes=1:ppn=4
#PBS -l pmem=16gb
#PBS -l walltime=00:10:00
#PBS -l feature=rhel7
#PBS -A open
#PBS -o logs/depth.eid.POLR2H.20M.log.out
#PBS -e logs/depth.eid.POLR2H.20M.log.err
#PBS -t 1-1000

module load gcc/8.3.1
module load bedtools/2.27.1
module load bwa/0.7.15
#module load python/3.6.8
module load samtools/1.5
module load anaconda3
source activate genopipe

# FIRST CHANGE PATH TO EXECUTE
WRK=/path/to/GenoPipe/paper/SyntheticEpitope
cd $WRK

DEPTH=20M
LOCUS=hg19_POLR2H-Nterm

FASTQ=$WRK/results/$LOCUS\_$DEPTH/FASTQ
ID=$WRK/results/$LOCUS\_$DEPTH/ID
TEMP=$WRK/temp18-$PBS_ARRAYID

[ -d logs ] || mkdir logs
[ -d $ID ] || mkdir $ID
[ -d $TEMP ] || mkdir $TEMP

if [[ -f $ID/Simulation_$PBS_ARRAYID\_R1-ID.tab ]]; then
	echo "ID already generated ($PBS_ARRAYID). Exiting.."
	exit
fi

# Set-up Temp directory
cd $TEMP
pwd
echo $FASTQ
ln -s $FASTQ/Simulation_$PBS_ARRAYID\_R1.fastq.gz
ln -s $FASTQ/Simulation_$PBS_ARRAYID\_R2.fastq.gz

DATABASE=$WRK/../db/hg19_EpiID
GENOPIPE=$WRK/../../

## Execute Mass EpitopeID and record time
cd $WRK
cd $GENOPIPE/EpitopeID
echo "(2) Begin executing EpitopeID for $R1..."
start=`date +%s`
bash identify-Epitope.sh -i $TEMP -o $ID -d $DATABASE -t 6
end=`date +%s`
runtime=$((end-start))
echo "...single EpitopeID for ($PBS_ARRAYID) $R1 finished in ${runtime}"

## Clean-up
rm -r $TEMP
