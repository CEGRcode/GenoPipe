#!/bin/bash
#PBS -l nodes=1:ppn=4
#PBS -l pmem=16gb
#PBS -l walltime=01:00:00
#PBS -A open
#PBS -o logs/mix.human.10M.eid.log.out
#PBS -e logs/mix.human.10M.eid.log.err
#PBS -t 90,80,70,60,50,40,30,20,10

# Each index of the job array t:[1,16] represents a different set of mixed simulations. This script will execute EpitopeID against all all simulated datasets at various titrations and use the perl script to calculate the detection statistics. Each index corresponds to a different titration mix.

# This script will check that 2000 FASTQ files have been generated before executing EpitopeID.

WRK=/path/to/GenoPipe/paper/SyntheticEpitope
cd $WRK

module load bedtools/2.27.1
module load bwa/0.7.15
module load python/2.7.14-anaconda5.0.1

DEPTH=10M
AFACTOR=CTCF
BFACTOR=POLR2H

RESULT=$WRK/results/mix_human_$DEPTH/$PBS_ARRAYID\_$AFACTOR\_$BFACTOR
[ -d $RESULT/ID ] || mkdir $RESULT/ID
echo $RESULT
#Check that all FASTQ files were genertaed first
if [ $(ls $RESULT/FASTQ/*.fastq.gz |wc -l ) -lt 2000 ];
then
	NFASTQ=`ls $OUTPUT/FASTQ/*.fastq.gz |wc -l`
	echo "Insufficient simulations for mix_yeast_${DEPTH}. Only have $NFASTQ FASTQ files, make sure you generate all 2000 before running EpitopeID"
	exit
fi

GENOPIPE=$WRK/../..
cd $GENOPIPE/EpitopeID
## Execute Mass EpitopeID and record time
echo "**Begin executing EpitopeID for mix_yeast_${DEPTH}..."
start=`date +%s`
bash identify-Epitope.sh -i $RESULT/FASTQ -o $RESULT/ID -d $GENOPIPE/paper/db/hg19_EpiID -t 4
end=`date +%s`
runtime=$((end-start))
MESSAGE="...mass EpitopeID for mix_human_${DEPTH} finished in ${runtime}"
echo $MESSAGE
cd $WRK

## Calculate detection
CALCULATE=scripts/calculate_detection_Stats.pl
echo "**Calculate detection of $GENE..."
echo $MESSAGE > $RESULT/runtime.txt
head -n 9999 $RESULT/ID/*-ID.tab | perl $CALCULATE - $AFACTOR $RESULT/$AFACTOR\_$DEPTH\_detectionStats.txt
head -n 9999 $RESULT/ID/*-ID.tab | perl $CALCULATE - $BFACTOR $RESULT/$BFACTOR\_$DEPTH\_detectionStats.txt
grep ${AFACTOR^^} $RESULT/ID/*-ID.tab | cut -d':' -f1 | sort | uniq > $RESULT/$AFACTOR\_hits.txt
grep ${BFACTOR^^} $RESULT/ID/*-ID.tab | cut -d':' -f1 | sort | uniq > $RESULT/$BFACTOR\_hits.txt
comm -12 $RESULT/$AFACTOR\_hits.txt $RESULT/$BFACTOR\_hits.txt > $RESULT/$AFACTOR\_and_$BFACTOR\_hits.txt
echo "Calculated"

